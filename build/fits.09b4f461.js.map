{"mappings":"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","sources":["./src/fits.js"],"sourcesContent":["console.log(this);\n\n// Generated by CoffeeScript 1.6.3\n(function() {\n  var Base, BinaryTable, CompressedImage, DataUnit, Decompress, FITS, HDU, Header, HeaderVerify, Image, ImageUtils, Parser, Table, Tabular, _ref, _ref1,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __slice = [].slice;\n\n  if (this.astro == null) {\n    this.astro = {};\n  }\n\n  Base = (function() {\n    function Base() {}\n\n    Base.include = function(obj) {\n      var key, value;\n      for (key in obj) {\n        value = obj[key];\n        this.prototype[key] = value;\n      }\n      return this;\n    };\n\n    Base.extend = function(obj) {\n      var key, value;\n      for (key in obj) {\n        value = obj[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    Base.prototype.proxy = function(func) {\n      var _this = this;\n      return function() {\n        return func.apply(_this, arguments);\n      };\n    };\n\n    Base.prototype.invoke = function(callback, opts, data) {\n      var context;\n      context = (opts != null ? opts.context : void 0) != null ? opts.context : this;\n      if (callback != null) {\n        return callback.call(context, data, opts);\n      }\n    };\n\n    return Base;\n\n  })();\n\n  Parser = (function(_super) {\n    __extends(Parser, _super);\n\n    Parser.prototype.LINEWIDTH = 80;\n\n    Parser.prototype.BLOCKLENGTH = 2880;\n\n    File.prototype.slice = File.prototype.slice || File.prototype.webkitSlice;\n\n    Blob.prototype.slice = Blob.prototype.slice || Blob.prototype.webkitSlice;\n\n    function Parser(arg, callback, opts) {\n      var xhr,\n        _this = this;\n      this.arg = arg;\n      this.callback = callback;\n      this.opts = opts;\n      this.hdus = [];\n      this.blockCount = 0;\n      this.begin = 0;\n      this.end = this.BLOCKLENGTH;\n      this.offset = 0;\n      this.headerStorage = new Uint8Array();\n      if (typeof this.arg === 'string') {\n        this.readNextBlock = this._readBlockFromBuffer;\n        xhr = new XMLHttpRequest();\n        xhr.open('GET', this.arg);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function() {\n          if (xhr.status !== 200) {\n            _this.invoke(_this.callback, _this.opts);\n            return;\n          }\n          _this.arg = xhr.response;\n          _this.length = _this.arg.byteLength;\n          return _this.readFromBuffer();\n        };\n        xhr.send();\n      } else {\n        this.length = this.arg.size;\n        this.readNextBlock = this._readBlockFromFile;\n        this.readFromFile();\n      }\n    }\n\n    Parser.prototype.readFromBuffer = function() {\n      var block;\n      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);\n      return this.readBlock(block);\n    };\n\n    Parser.prototype.readFromFile = function() {\n      var block,\n        _this = this;\n      this.reader = new FileReader();\n      this.reader.onloadend = function(e) {\n        return _this.readBlock(e.target.result);\n      };\n      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);\n      return this.reader.readAsArrayBuffer(block);\n    };\n\n    Parser.prototype.readBlock = function(block) {\n      var arr, dataLength, dataunit, header, rowIndex, rows, s, slice, tmp, value, _i, _len, _ref;\n      arr = new Uint8Array(block);\n      tmp = new Uint8Array(this.headerStorage);\n      this.headerStorage = new Uint8Array(this.end);\n      this.headerStorage.set(tmp, 0);\n      this.headerStorage.set(arr, this.begin);\n      rows = this.BLOCKLENGTH / this.LINEWIDTH;\n      while (rows--) {\n        rowIndex = rows * this.LINEWIDTH;\n        if (arr[rowIndex] === 32) {\n          continue;\n        }\n        if (arr[rowIndex] === 69 && arr[rowIndex + 1] === 78 && arr[rowIndex + 2] === 68 && arr[rowIndex + 3] === 32) {\n          s = '';\n          _ref = this.headerStorage;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            value = _ref[_i];\n            s += String.fromCharCode(value);\n          }\n          header = new Header(s);\n          this.start = this.end + this.offset;\n          dataLength = header.getDataLength();\n          slice = this.arg.slice(this.start, this.start + dataLength);\n          if (header.hasDataUnit()) {\n            dataunit = this.createDataUnit(header, slice);\n          }\n          this.hdus.push(new HDU(header, dataunit));\n          this.offset += this.end + dataLength + this.excessBytes(dataLength);\n          if (this.offset === this.length) {\n            this.headerStorage = null;\n            this.invoke(this.callback, this.opts, this);\n            return;\n          }\n          this.blockCount = 0;\n          this.begin = this.blockCount * this.BLOCKLENGTH;\n          this.end = this.begin + this.BLOCKLENGTH;\n          this.headerStorage = new Uint8Array();\n          block = this.arg.slice(this.begin + this.offset, this.end + this.offset);\n          this.readNextBlock(block);\n          return;\n        }\n        break;\n      }\n      this.blockCount += 1;\n      this.begin = this.blockCount * this.BLOCKLENGTH;\n      this.end = this.begin + this.BLOCKLENGTH;\n      block = this.arg.slice(this.begin + this.offset, this.end + this.offset);\n      this.readNextBlock(block);\n    };\n\n    Parser.prototype._readBlockFromBuffer = function(block) {\n      return this.readBlock(block);\n    };\n\n    Parser.prototype._readBlockFromFile = function(block) {\n      return this.reader.readAsArrayBuffer(block);\n    };\n\n    Parser.prototype.createDataUnit = function(header, blob) {\n      var type;\n      type = header.getDataType();\n      return new astro.FITS[type](header, blob);\n    };\n\n    Parser.prototype.excessBytes = function(length) {\n      return (this.BLOCKLENGTH - (length % this.BLOCKLENGTH)) % this.BLOCKLENGTH;\n    };\n\n    Parser.prototype.isEOF = function() {\n      if (this.offset === this.length) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    return Parser;\n\n  })(Base);\n\n  FITS = (function(_super) {\n    __extends(FITS, _super);\n\n    function FITS(arg, callback, opts) {\n      var parser,\n        _this = this;\n      this.arg = arg;\n      parser = new Parser(this.arg, function(fits) {\n        _this.hdus = parser.hdus;\n        return _this.invoke(callback, opts, _this);\n      });\n    }\n\n    FITS.prototype.getHDU = function(index) {\n      var hdu, _i, _len, _ref;\n      if ((index != null) && (this.hdus[index] != null)) {\n        return this.hdus[index];\n      }\n      _ref = this.hdus;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        hdu = _ref[_i];\n        if (hdu.hasData()) {\n          return hdu;\n        }\n      }\n    };\n\n    FITS.prototype.getHeader = function(index) {\n      return this.getHDU(index).header;\n    };\n\n    FITS.prototype.getDataUnit = function(index) {\n      return this.getHDU(index).data;\n    };\n\n    return FITS;\n\n  })(Base);\n\n  FITS.version = '0.6.5';\n\n  this.astro.FITS = FITS;\n\n  DataUnit = (function(_super) {\n    __extends(DataUnit, _super);\n\n    DataUnit.swapEndian = {\n      B: function(value) {\n        return value;\n      },\n      I: function(value) {\n        return (value << 8) | (value >> 8);\n      },\n      J: function(value) {\n        return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);\n      }\n    };\n\n    DataUnit.swapEndian[8] = DataUnit.swapEndian['B'];\n\n    DataUnit.swapEndian[16] = DataUnit.swapEndian['I'];\n\n    DataUnit.swapEndian[32] = DataUnit.swapEndian['J'];\n\n    function DataUnit(header, data) {\n      if (data instanceof ArrayBuffer) {\n        this.buffer = data;\n      } else {\n        this.blob = data;\n      }\n    }\n\n    return DataUnit;\n\n  })(Base);\n\n  this.astro.FITS.DataUnit = DataUnit;\n\n  HeaderVerify = {\n    verifyOrder: function(keyword, order) {\n      if (order !== this.cardIndex) {\n        return console.warn(\"\" + keyword + \" should appear at index \" + this.cardIndex + \" in the FITS header\");\n      }\n    },\n    verifyBetween: function(keyword, value, lower, upper) {\n      if (!(value >= lower && value <= upper)) {\n        throw \"The \" + keyword + \" value of \" + value + \" is not between \" + lower + \" and \" + upper;\n      }\n    },\n    verifyBoolean: function(value) {\n      if (value === \"T\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    VerifyFns: {\n      SIMPLE: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = arguments[0];\n        this.primary = true;\n        this.verifyOrder(\"SIMPLE\", 0);\n        return this.verifyBoolean(value);\n      },\n      XTENSION: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        this.extension = true;\n        this.extensionType = arguments[0];\n        this.verifyOrder(\"XTENSION\", 0);\n        return this.extensionType;\n      },\n      BITPIX: function() {\n        var args, key, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        key = \"BITPIX\";\n        value = parseInt(arguments[0]);\n        this.verifyOrder(key, 1);\n        if (value !== 8 && value !== 16 && value !== 32 && value !== (-32) && value !== (-64)) {\n          throw \"\" + key + \" value \" + value + \" is not permitted\";\n        }\n        return value;\n      },\n      NAXIS: function() {\n        var args, array, key, required, value, _ref;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        key = \"NAXIS\";\n        value = parseInt(arguments[0]);\n        array = arguments[1];\n        if (!array) {\n          this.verifyOrder(key, 2);\n          this.verifyBetween(key, value, 0, 999);\n          if (this.isExtension()) {\n            if ((_ref = this.extensionType) === \"TABLE\" || _ref === \"BINTABLE\") {\n              required = 2;\n              if (value !== required) {\n                throw \"\" + key + \" must be \" + required + \" for TABLE and BINTABLE extensions\";\n              }\n            }\n          }\n        }\n        return value;\n      },\n      PCOUNT: function() {\n        var args, key, order, required, value, _ref;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        key = \"PCOUNT\";\n        value = parseInt(arguments[0]);\n        order = 1 + 1 + 1 + this.get(\"NAXIS\");\n        this.verifyOrder(key, order);\n        if (this.isExtension()) {\n          if ((_ref = this.extensionType) === \"IMAGE\" || _ref === \"TABLE\") {\n            required = 0;\n            if (value !== required) {\n              throw \"\" + key + \" must be \" + required + \" for the \" + this.extensionType + \" extensions\";\n            }\n          }\n        }\n        return value;\n      },\n      GCOUNT: function() {\n        var args, key, order, required, value, _ref;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        key = \"GCOUNT\";\n        value = parseInt(arguments[0]);\n        order = 1 + 1 + 1 + this.get(\"NAXIS\") + 1;\n        this.verifyOrder(key, order);\n        if (this.isExtension()) {\n          if ((_ref = this.extensionType) === \"IMAGE\" || _ref === \"TABLE\" || _ref === \"BINTABLE\") {\n            required = 1;\n            if (value !== required) {\n              throw \"\" + key + \" must be \" + required + \" for the \" + this.extensionType + \" extensions\";\n            }\n          }\n        }\n        return value;\n      },\n      EXTEND: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = arguments[0];\n        if (!this.isPrimary()) {\n          throw \"EXTEND must only appear in the primary header\";\n        }\n        return this.verifyBoolean(value);\n      },\n      BSCALE: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseFloat(arguments[0]);\n      },\n      BZERO: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseFloat(arguments[0]);\n      },\n      BLANK: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = arguments[0];\n        if (!(this.get(\"BITPIX\") > 0)) {\n          console.warn(\"BLANK is not to be used for BITPIX = \" + (this.get('BITPIX')));\n        }\n        return parseInt(value);\n      },\n      DATAMIN: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseFloat(arguments[0]);\n      },\n      DATAMAX: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseFloat(arguments[0]);\n      },\n      EXTVER: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      },\n      EXTLEVEL: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      },\n      TFIELDS: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = parseInt(arguments[0]);\n        this.verifyBetween(\"TFIELDS\", value, 0, 999);\n        return value;\n      },\n      TBCOL: function() {\n        var args, index, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = arguments[0];\n        index = arguments[2];\n        this.verifyBetween(\"TBCOL\", index, 0, this.get(\"TFIELDS\"));\n        return value;\n      },\n      ZIMAGE: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return this.verifyBoolean(arguments[0]);\n      },\n      ZCMPTYPE: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = arguments[0];\n        if (value !== 'GZIP_1' && value !== 'RICE_1' && value !== 'PLIO_1' && value !== 'HCOMPRESS_1') {\n          throw \"ZCMPTYPE value \" + value + \" is not permitted\";\n        }\n        if (value !== 'RICE_1') {\n          throw \"Compress type \" + value + \" is not yet implement\";\n        }\n        return value;\n      },\n      ZBITPIX: function() {\n        var args, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = parseInt(arguments[0]);\n        if (value !== 8 && value !== 16 && value !== 32 && value !== 64 && value !== (-32) && value !== (-64)) {\n          throw \"ZBITPIX value \" + value + \" is not permitted\";\n        }\n        return value;\n      },\n      ZNAXIS: function() {\n        var args, array, value;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = parseInt(arguments[0]);\n        array = arguments[1];\n        value = value;\n        if (!array) {\n          this.verifyBetween(\"ZNAXIS\", value, 0, 999);\n        }\n        return value;\n      },\n      ZTILE: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      },\n      ZSIMPLE: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        if (arguments[0] === \"T\") {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      ZPCOUNT: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      },\n      ZGCOUNT: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      },\n      ZDITHER0: function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return parseInt(arguments[0]);\n      }\n    }\n  };\n\n  this.astro.FITS.HeaderVerify = HeaderVerify;\n\n  Header = (function(_super) {\n    __extends(Header, _super);\n\n    Header.include(HeaderVerify);\n\n    Header.prototype.arrayPattern = /(\\D+)(\\d+)/;\n\n    Header.prototype.maxLines = 600;\n\n    function Header(block) {\n      var method, name, _ref;\n      this.primary = false;\n      this.extension = false;\n      this.verifyCard = {};\n      _ref = this.VerifyFns;\n      for (name in _ref) {\n        method = _ref[name];\n        this.verifyCard[name] = this.proxy(method);\n      }\n      this.cards = {};\n      this.cards[\"COMMENT\"] = [];\n      this.cards[\"HISTORY\"] = [];\n      this.cardIndex = 0;\n      this.block = block;\n      this.readBlock(block);\n    }\n\n    Header.prototype.get = function(key) {\n      if (this.contains(key)) {\n        return this.cards[key].value;\n      } else {\n        return null;\n      }\n    };\n\n    Header.prototype.set = function(key, value, comment) {\n      comment = comment || '';\n      this.cards[key] = {\n        index: this.cardIndex,\n        value: value,\n        comment: comment\n      };\n      return this.cardIndex += 1;\n    };\n\n    Header.prototype.contains = function(key) {\n      return this.cards.hasOwnProperty(key);\n    };\n\n    Header.prototype.readLine = function(l) {\n      var blank, comment, firstByte, indicator, key, value, _ref;\n      key = l.slice(0, 8).trim();\n      blank = key === '';\n      if (blank) {\n        return;\n      }\n      indicator = l.slice(8, 10);\n      value = l.slice(10);\n      if (indicator !== \"= \") {\n        if (key === 'COMMENT' || key === 'HISTORY') {\n          this.cards[key].push(value.trim());\n        }\n        return;\n      }\n      _ref = value.split(' /'), value = _ref[0], comment = _ref[1];\n      value = value.trim();\n      firstByte = value[0];\n      if (firstByte === \"'\") {\n        value = value.slice(1, -1).trim();\n      } else {\n        if (value !== 'T' && value !== 'F') {\n          value = parseFloat(value);\n        }\n      }\n      value = this.validate(key, value);\n      return this.set(key, value, comment);\n    };\n\n    Header.prototype.validate = function(key, value) {\n      var baseKey, index, isArray, match, _ref;\n      index = null;\n      baseKey = key;\n      isArray = this.arrayPattern.test(key);\n      if (isArray) {\n        match = this.arrayPattern.exec(key);\n        _ref = match.slice(1), baseKey = _ref[0], index = _ref[1];\n      }\n      if (baseKey in this.verifyCard) {\n        value = this.verifyCard[baseKey](value, isArray, index);\n      }\n      return value;\n    };\n\n    Header.prototype.readBlock = function(block) {\n      var i, line, lineWidth, nLines, _i, _ref, _results;\n      lineWidth = 80;\n      nLines = block.length / lineWidth;\n      nLines = nLines < this.maxLines ? nLines : this.maxLines;\n      _results = [];\n      for (i = _i = 0, _ref = nLines - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n        line = block.slice(i * lineWidth, (i + 1) * lineWidth);\n        _results.push(this.readLine(line));\n      }\n      return _results;\n    };\n\n    Header.prototype.hasDataUnit = function() {\n      if (this.get(\"NAXIS\") === 0) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    Header.prototype.getDataLength = function() {\n      var i, length, naxis, _i, _ref;\n      if (!this.hasDataUnit()) {\n        return 0;\n      }\n      naxis = [];\n      for (i = _i = 1, _ref = this.get(\"NAXIS\"); 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {\n        naxis.push(this.get(\"NAXIS\" + i));\n      }\n      length = naxis.reduce(function(a, b) {\n        return a * b;\n      }) * Math.abs(this.get(\"BITPIX\")) / 8;\n      length += this.get(\"PCOUNT\");\n      return length;\n    };\n\n    Header.prototype.getDataType = function() {\n      switch (this.extensionType) {\n        case 'BINTABLE':\n          if (this.contains('ZIMAGE')) {\n            return 'CompressedImage';\n          }\n          return 'BinaryTable';\n        case 'TABLE':\n          return 'Table';\n        default:\n          if (this.hasDataUnit()) {\n            return 'Image';\n          } else {\n            return null;\n          }\n      }\n    };\n\n    Header.prototype.isPrimary = function() {\n      return this.primary;\n    };\n\n    Header.prototype.isExtension = function() {\n      return this.extension;\n    };\n\n    return Header;\n\n  })(Base);\n\n  this.astro.FITS.Header = Header;\n\n  ImageUtils = {\n    getExtent: function(arr) {\n      var index, max, min, value;\n      index = arr.length;\n      while (index--) {\n        value = arr[index];\n        if (isNaN(value)) {\n          continue;\n        }\n        min = max = value;\n        break;\n      }\n      if (index === -1) {\n        return [NaN, NaN];\n      }\n      while (index--) {\n        value = arr[index];\n        if (isNaN(value)) {\n          continue;\n        }\n        if (value < min) {\n          min = value;\n        }\n        if (value > max) {\n          max = value;\n        }\n      }\n      return [min, max];\n    },\n    getPixel: function(arr, x, y) {\n      return arr[y * this.width + x];\n    }\n  };\n\n  this.astro.FITS.ImageUtils = ImageUtils;\n\n  Image = (function(_super) {\n    __extends(Image, _super);\n\n    Image.include(ImageUtils);\n\n    Image.prototype.allocationSize = 16777216;\n\n    function Image(header, data) {\n      var begin, frame, i, naxis, _i, _j, _ref;\n      Image.__super__.constructor.apply(this, arguments);\n      naxis = header.get(\"NAXIS\");\n      this.bitpix = header.get(\"BITPIX\");\n      this.naxis = [];\n      for (i = _i = 1; 1 <= naxis ? _i <= naxis : _i >= naxis; i = 1 <= naxis ? ++_i : --_i) {\n        this.naxis.push(header.get(\"NAXIS\" + i));\n      }\n      this.width = header.get(\"NAXIS1\");\n      this.height = header.get(\"NAXIS2\") || 1;\n      this.depth = header.get(\"NAXIS3\") || 1;\n      this.bzero = header.get(\"BZERO\") || 0;\n      this.bscale = header.get(\"BSCALE\") || 1;\n      this.bytes = Math.abs(this.bitpix) / 8;\n      this.length = this.naxis.reduce(function(a, b) {\n        return a * b;\n      }) * Math.abs(this.bitpix) / 8;\n      this.frame = 0;\n      this.frameOffsets = [];\n      this.frameLength = this.bytes * this.width * this.height;\n      this.nBuffers = this.buffer != null ? 1 : 2;\n      for (i = _j = 0, _ref = this.depth - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {\n        begin = i * this.frameLength;\n        frame = {\n          begin: begin\n        };\n        if (this.buffer != null) {\n          frame.buffers = [this.buffer.slice(begin, begin + this.frameLength)];\n        }\n        this.frameOffsets.push(frame);\n      }\n    }\n\n    Image.prototype._getFrame = function(buffer, bitpix, bzero, bscale) {\n      var arr, bytes, dataType, i, nPixels, swapEndian, tmp, value;\n      bytes = Math.abs(bitpix) / 8;\n      nPixels = i = buffer.byteLength / bytes;\n      dataType = Math.abs(bitpix);\n      if (bitpix > 0) {\n        switch (bitpix) {\n          case 8:\n            tmp = new Uint8Array(buffer);\n            tmp = new Uint16Array(tmp);\n            swapEndian = function(value) {\n              return value;\n            };\n            break;\n          case 16:\n            tmp = new Int16Array(buffer);\n            swapEndian = function(value) {\n              return ((value & 0xFF) << 8) | ((value >> 8) & 0xFF);\n            };\n            break;\n          case 32:\n            tmp = new Int32Array(buffer);\n            swapEndian = function(value) {\n              return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);\n            };\n        }\n        if (!(parseInt(bzero) === bzero && parseInt(bscale) === bscale)) {\n          arr = new Float32Array(tmp.length);\n        } else {\n          arr = tmp;\n        }\n        while (nPixels--) {\n          tmp[nPixels] = swapEndian(tmp[nPixels]);\n          arr[nPixels] = bzero + bscale * tmp[nPixels];\n        }\n      } else {\n        arr = new Uint32Array(buffer);\n        swapEndian = function(value) {\n          return ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) | ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF);\n        };\n        while (i--) {\n          value = arr[i];\n          arr[i] = swapEndian(value);\n        }\n        arr = new Float32Array(buffer);\n        while (nPixels--) {\n          arr[nPixels] = bzero + bscale * arr[nPixels];\n        }\n      }\n      return arr;\n    };\n\n    Image.prototype._getFrameAsync = function(buffers, callback, opts) {\n      var URL, blobGetFrame, blobOnMessage, fn1, fn2, i, mime, msg, onmessage, pixels, start, urlGetFrame, urlOnMessage, worker,\n        _this = this;\n      onmessage = function(e) {\n        var arr, bitpix, bscale, buffer, bzero, data, url;\n        data = e.data;\n        buffer = data.buffer;\n        bitpix = data.bitpix;\n        bzero = data.bzero;\n        bscale = data.bscale;\n        url = data.url;\n        importScripts(url);\n        arr = _getFrame(buffer, bitpix, bzero, bscale);\n        return postMessage(arr);\n      };\n      fn1 = onmessage.toString().replace('return postMessage', 'postMessage');\n      fn1 = \"onmessage = \" + fn1;\n      fn2 = this._getFrame.toString();\n      fn2 = fn2.replace('function', 'function _getFrame');\n      mime = \"application/javascript\";\n      blobOnMessage = new Blob([fn1], {\n        type: mime\n      });\n      blobGetFrame = new Blob([fn2], {\n        type: mime\n      });\n      URL = window.URL || window.webkitURL;\n      urlOnMessage = URL.createObjectURL(blobOnMessage);\n      urlGetFrame = URL.createObjectURL(blobGetFrame);\n      worker = new Worker(urlOnMessage);\n      msg = {\n        buffer: buffers[0],\n        bitpix: this.bitpix,\n        bzero: this.bzero,\n        bscale: this.bscale,\n        url: urlGetFrame\n      };\n      i = 0;\n      pixels = null;\n      start = 0;\n      worker.onmessage = function(e) {\n        var arr;\n        arr = e.data;\n        if (pixels == null) {\n          pixels = new arr.constructor(_this.width * _this.height);\n        }\n        pixels.set(arr, start);\n        start += arr.length;\n        i += 1;\n        if (i === _this.nBuffers) {\n          _this.invoke(callback, opts, pixels);\n          URL.revokeObjectURL(urlOnMessage);\n          URL.revokeObjectURL(urlGetFrame);\n          return worker.terminate();\n        } else {\n          msg.buffer = buffers[i];\n          return worker.postMessage(msg, [buffers[i]]);\n        }\n      };\n      worker.postMessage(msg, [buffers[0]]);\n    };\n\n    Image.prototype.getFrame = function(frame, callback, opts) {\n      var begin, blobFrame, blobs, buffers, bytesPerBuffer, frameInfo, i, nRowsPerBuffer, reader, start, _i, _ref,\n        _this = this;\n      this.frame = frame || this.frame;\n      frameInfo = this.frameOffsets[this.frame];\n      buffers = frameInfo.buffers;\n      if ((buffers != null ? buffers.length : void 0) === this.nBuffers) {\n        return this._getFrameAsync(buffers, callback, opts);\n      } else {\n        this.frameOffsets[this.frame].buffers = [];\n        begin = frameInfo.begin;\n        blobFrame = this.blob.slice(begin, begin + this.frameLength);\n        blobs = [];\n        nRowsPerBuffer = Math.floor(this.height / this.nBuffers);\n        bytesPerBuffer = nRowsPerBuffer * this.bytes * this.width;\n        for (i = _i = 0, _ref = this.nBuffers - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          start = i * bytesPerBuffer;\n          if (i === this.nBuffers - 1) {\n            blobs.push(blobFrame.slice(start));\n          } else {\n            blobs.push(blobFrame.slice(start, start + bytesPerBuffer));\n          }\n        }\n        buffers = [];\n        reader = new FileReader();\n        reader.frame = this.frame;\n        i = 0;\n        reader.onloadend = function(e) {\n          var buffer;\n          frame = e.target.frame;\n          buffer = e.target.result;\n          _this.frameOffsets[frame].buffers.push(buffer);\n          i += 1;\n          if (i === _this.nBuffers) {\n            return _this.getFrame(frame, callback, opts);\n          } else {\n            return reader.readAsArrayBuffer(blobs[i]);\n          }\n        };\n        return reader.readAsArrayBuffer(blobs[0]);\n      }\n    };\n\n    Image.prototype.getFrames = function(frame, number, callback, opts) {\n      var cb,\n        _this = this;\n      cb = function(arr, opts) {\n        _this.invoke(callback, opts, arr);\n        number -= 1;\n        frame += 1;\n        if (!number) {\n          return;\n        }\n        return _this.getFrame(frame, cb, opts);\n      };\n      return this.getFrame(frame, cb, opts);\n    };\n\n    Image.prototype.isDataCube = function() {\n      if (this.naxis.length > 2) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    return Image;\n\n  })(DataUnit);\n\n  this.astro.FITS.Image = Image;\n\n  Tabular = (function(_super) {\n    __extends(Tabular, _super);\n\n    Tabular.prototype.maxMemory = 1048576;\n\n    function Tabular(header, data) {\n      Tabular.__super__.constructor.apply(this, arguments);\n      this.rowByteSize = header.get(\"NAXIS1\");\n      this.rows = header.get(\"NAXIS2\");\n      this.cols = header.get(\"TFIELDS\");\n      this.length = this.rowByteSize * this.rows;\n      this.heapLength = header.get(\"PCOUNT\");\n      this.columns = this.getColumns(header);\n      if (this.buffer != null) {\n        this.rowsInMemory = this._rowsInMemoryBuffer;\n        this.heap = this.buffer.slice(this.length, this.length + this.heapLength);\n      } else {\n        this.rowsInMemory = this._rowsInMemoryBlob;\n        this.firstRowInBuffer = this.lastRowInBuffer = 0;\n        this.nRowsInBuffer = Math.floor(this.maxMemory / this.rowByteSize);\n      }\n      this.accessors = [];\n      this.descriptors = [];\n      this.elementByteLengths = [];\n      this.setAccessors(header);\n    }\n\n    Tabular.prototype._rowsInMemoryBuffer = function() {\n      return true;\n    };\n\n    Tabular.prototype._rowsInMemoryBlob = function(firstRow, lastRow) {\n      if (firstRow < this.firstRowInBuffer) {\n        return false;\n      }\n      if (lastRow > this.lastRowInBuffer) {\n        return false;\n      }\n      return true;\n    };\n\n    Tabular.prototype.getColumns = function(header) {\n      var columns, i, key, _i, _ref;\n      columns = [];\n      for (i = _i = 1, _ref = this.cols; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {\n        key = \"TTYPE\" + i;\n        if (!header.contains(key)) {\n          return null;\n        }\n        columns.push(header.get(key));\n      }\n      return columns;\n    };\n\n    Tabular.prototype.getColumn = function(name, callback, opts) {\n      var accessor, cb, column, descriptor, elementByteLength, elementByteOffset, factor, i, index, iterations, rowsPerIteration,\n        _this = this;\n      if (this.blob != null) {\n        index = this.columns.indexOf(name);\n        descriptor = this.descriptors[index];\n        accessor = this.accessors[index];\n        elementByteLength = this.elementByteLengths[index];\n        elementByteOffset = this.elementByteLengths.slice(0, index);\n        if (elementByteOffset.length === 0) {\n          elementByteOffset = 0;\n        } else {\n          elementByteOffset = elementByteOffset.reduce(function(a, b) {\n            return a + b;\n          });\n        }\n        column = this.typedArray[descriptor] != null ? new this.typedArray[descriptor](this.rows) : [];\n        rowsPerIteration = ~~(this.maxMemory / this.rowByteSize);\n        rowsPerIteration = Math.min(rowsPerIteration, this.rows);\n        factor = this.rows / rowsPerIteration;\n        iterations = Math.floor(factor) === factor ? factor : Math.floor(factor) + 1;\n        i = 0;\n        index = 0;\n        cb = function(buffer, opts) {\n          var nRows, offset, startRow, view;\n          nRows = buffer.byteLength / _this.rowByteSize;\n          view = new DataView(buffer);\n          offset = elementByteOffset;\n          while (nRows--) {\n            column[i] = accessor(view, offset)[0];\n            i += 1;\n            offset += _this.rowByteSize;\n          }\n          iterations -= 1;\n          index += 1;\n          if (iterations) {\n            startRow = index * rowsPerIteration;\n            return _this.getTableBuffer(startRow, rowsPerIteration, cb, opts);\n          } else {\n            _this.invoke(callback, opts, column);\n          }\n        };\n        return this.getTableBuffer(0, rowsPerIteration, cb, opts);\n      } else {\n        cb = function(rows, opts) {\n          column = rows.map(function(d) {\n            return d[name];\n          });\n          return _this.invoke(callback, opts, column);\n        };\n        return this.getRows(0, this.rows, cb, opts);\n      }\n    };\n\n    Tabular.prototype.getTableBuffer = function(row, number, callback, opts) {\n      var begin, blobRows, end, reader,\n        _this = this;\n      number = Math.min(this.rows - row, number);\n      begin = row * this.rowByteSize;\n      end = begin + number * this.rowByteSize;\n      blobRows = this.blob.slice(begin, end);\n      reader = new FileReader();\n      reader.row = row;\n      reader.number = number;\n      reader.onloadend = function(e) {\n        return _this.invoke(callback, opts, e.target.result);\n      };\n      return reader.readAsArrayBuffer(blobRows);\n    };\n\n    Tabular.prototype.getRows = function(row, number, callback, opts) {\n      var begin, blobRows, buffer, end, reader, rows,\n        _this = this;\n      if (this.rowsInMemory(row, row + number)) {\n        if (this.blob != null) {\n          buffer = this.buffer;\n        } else {\n          begin = row * this.rowByteSize;\n          end = begin + number * this.rowByteSize;\n          buffer = this.buffer.slice(begin, end);\n        }\n        rows = this._getRows(buffer, number);\n        this.invoke(callback, opts, rows);\n        return rows;\n      } else {\n        begin = row * this.rowByteSize;\n        end = begin + Math.max(this.nRowsInBuffer * this.rowByteSize, number * this.rowByteSize);\n        blobRows = this.blob.slice(begin, end);\n        reader = new FileReader();\n        reader.row = row;\n        reader.number = number;\n        reader.onloadend = function(e) {\n          var target;\n          target = e.target;\n          _this.buffer = target.result;\n          _this.firstRowInBuffer = _this.lastRowInBuffer = target.row;\n          _this.lastRowInBuffer += target.number;\n          return _this.getRows(row, number, callback, opts);\n        };\n        return reader.readAsArrayBuffer(blobRows);\n      }\n    };\n\n    return Tabular;\n\n  })(DataUnit);\n\n  this.astro.FITS.Tabular = Tabular;\n\n  Table = (function(_super) {\n    __extends(Table, _super);\n\n    function Table() {\n      _ref = Table.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    Table.prototype.dataAccessors = {\n      A: function(value) {\n        return value.trim();\n      },\n      I: function(value) {\n        return parseInt(value);\n      },\n      F: function(value) {\n        return parseFloat(value);\n      },\n      E: function(value) {\n        return parseFloat(value);\n      },\n      D: function(value) {\n        return parseFloat(value);\n      }\n    };\n\n    Table.prototype.setAccessors = function(header) {\n      var descriptor, form, i, match, pattern, type, _i, _ref1, _results,\n        _this = this;\n      pattern = /([AIFED])(\\d+)\\.*(\\d+)*/;\n      _results = [];\n      for (i = _i = 1, _ref1 = this.cols; 1 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 1 <= _ref1 ? ++_i : --_i) {\n        form = header.get(\"TFORM\" + i);\n        type = header.get(\"TTYPE\" + i);\n        match = pattern.exec(form);\n        descriptor = match[1];\n        _results.push((function(descriptor) {\n          var accessor;\n          accessor = function(value) {\n            return _this.dataAccessors[descriptor](value);\n          };\n          return _this.accessors.push(accessor);\n        })(descriptor));\n      }\n      return _results;\n    };\n\n    Table.prototype._getRows = function(buffer) {\n      var accessor, arr, begin, end, i, index, line, nRows, row, rows, subarray, value, _i, _j, _k, _len, _len1, _ref1, _ref2;\n      nRows = buffer.byteLength / this.rowByteSize;\n      arr = new Uint8Array(buffer);\n      rows = [];\n      for (i = _i = 0, _ref1 = nRows - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 0 <= _ref1 ? ++_i : --_i) {\n        begin = i * this.rowByteSize;\n        end = begin + this.rowByteSize;\n        subarray = arr.subarray(begin, end);\n        line = '';\n        for (_j = 0, _len = subarray.length; _j < _len; _j++) {\n          value = subarray[_j];\n          line += String.fromCharCode(value);\n        }\n        line = line.trim().split(/\\s+/);\n        row = {};\n        _ref2 = this.accessors;\n        for (index = _k = 0, _len1 = _ref2.length; _k < _len1; index = ++_k) {\n          accessor = _ref2[index];\n          value = line[index];\n          row[this.columns[index]] = accessor(value);\n        }\n        rows.push(row);\n      }\n      return rows;\n    };\n\n    return Table;\n\n  })(Tabular);\n\n  this.astro.FITS.Table = Table;\n\n  BinaryTable = (function(_super) {\n    __extends(BinaryTable, _super);\n\n    function BinaryTable() {\n      _ref1 = BinaryTable.__super__.constructor.apply(this, arguments);\n      return _ref1;\n    }\n\n    BinaryTable.prototype.typedArray = {\n      B: Uint8Array,\n      I: Uint16Array,\n      J: Uint32Array,\n      E: Float32Array,\n      D: Float64Array,\n      1: Uint8Array,\n      2: Uint16Array,\n      4: Uint32Array\n    };\n\n    BinaryTable.offsets = {\n      L: 1,\n      B: 1,\n      I: 2,\n      J: 4,\n      K: 8,\n      A: 1,\n      E: 4,\n      D: 8,\n      C: 8,\n      M: 16\n    };\n\n    BinaryTable.prototype.dataAccessors = {\n      L: function(view, offset) {\n        var val, x;\n        x = view.getInt8(offset);\n        offset += 1;\n        val = x === 84 ? true : false;\n        return [val, offset];\n      },\n      B: function(view, offset) {\n        var val;\n        val = view.getUint8(offset);\n        offset += 1;\n        return [val, offset];\n      },\n      I: function(view, offset) {\n        var val;\n        val = view.getInt16(offset);\n        offset += 2;\n        return [val, offset];\n      },\n      J: function(view, offset) {\n        var val;\n        val = view.getInt32(offset);\n        offset += 4;\n        return [val, offset];\n      },\n      K: function(view, offset) {\n        var factor, highByte, lowByte, mod, val;\n        highByte = Math.abs(view.getInt32(offset));\n        offset += 4;\n        lowByte = Math.abs(view.getInt32(offset));\n        offset += 4;\n        mod = highByte % 10;\n        factor = mod ? -1 : 1;\n        highByte -= mod;\n        val = factor * ((highByte << 32) | lowByte);\n        return [val, offset];\n      },\n      A: function(view, offset) {\n        var val;\n        val = view.getUint8(offset);\n        val = String.fromCharCode(val);\n        offset += 1;\n        return [val, offset];\n      },\n      E: function(view, offset) {\n        var val;\n        val = view.getFloat32(offset);\n        offset += 4;\n        return [val, offset];\n      },\n      D: function(view, offset) {\n        var val;\n        val = view.getFloat64(offset);\n        offset += 8;\n        return [val, offset];\n      },\n      C: function(view, offset) {\n        var val, val1, val2;\n        val1 = view.getFloat32(offset);\n        offset += 4;\n        val2 = view.getFloat32(offset);\n        offset += 4;\n        val = [val1, val2];\n        return [val, offset];\n      },\n      M: function(view, offset) {\n        var val, val1, val2;\n        val1 = view.getFloat64(offset);\n        offset += 8;\n        val2 = view.getFloat64(offset);\n        offset += 8;\n        val = [val1, val2];\n        return [val, offset];\n      }\n    };\n\n    BinaryTable.prototype.toBits = function(byte) {\n      var arr, i;\n      arr = [];\n      i = 128;\n      while (i >= 1) {\n        arr.push((byte & i ? 1 : 0));\n        i /= 2;\n      }\n      return arr;\n    };\n\n    BinaryTable.prototype.getFromHeap = function(view, offset, descriptor) {\n      var arr, heapOffset, heapSlice, i, length;\n      length = view.getInt32(offset);\n      offset += 4;\n      heapOffset = view.getInt32(offset);\n      offset += 4;\n      heapSlice = this.heap.slice(heapOffset, heapOffset + length);\n      arr = new this.typedArray[descriptor](heapSlice);\n      i = arr.length;\n      while (i--) {\n        arr[i] = this.constructor.swapEndian[descriptor](arr[i]);\n      }\n      return [arr, offset];\n    };\n\n    BinaryTable.prototype.setAccessors = function(header) {\n      var count, descriptor, form, i, isArray, match, pattern, type, _i, _ref2, _results,\n        _this = this;\n      pattern = /(\\d*)([P|Q]*)([L|X|B|I|J|K|A|E|D|C|M]{1})/;\n      _results = [];\n      for (i = _i = 1, _ref2 = this.cols; 1 <= _ref2 ? _i <= _ref2 : _i >= _ref2; i = 1 <= _ref2 ? ++_i : --_i) {\n        form = header.get(\"TFORM\" + i);\n        type = header.get(\"TTYPE\" + i);\n        match = pattern.exec(form);\n        count = parseInt(match[1]) || 1;\n        isArray = match[2];\n        descriptor = match[3];\n        _results.push((function(descriptor, count) {\n          var accessor, nBytes;\n          _this.descriptors.push(descriptor);\n          _this.elementByteLengths.push(_this.constructor.offsets[descriptor] * count);\n          if (isArray) {\n            switch (type) {\n              case \"COMPRESSED_DATA\":\n                accessor = function(view, offset) {\n                  var arr, pixels, _ref3;\n                  _ref3 = _this.getFromHeap(view, offset, descriptor), arr = _ref3[0], offset = _ref3[1];\n                  pixels = new _this.typedArray[_this.algorithmParameters[\"BYTEPIX\"]](_this.ztile[0]);\n                  Decompress.Rice(arr, _this.algorithmParameters[\"BLOCKSIZE\"], _this.algorithmParameters[\"BYTEPIX\"], pixels, _this.ztile[0], Decompress.RiceSetup);\n                  return [pixels, offset];\n                };\n                break;\n              case \"GZIP_COMPRESSED_DATA\":\n                accessor = function(view, offset) {\n                  var arr;\n                  arr = new Float32Array(_this.width);\n                  i = arr.length;\n                  while (i--) {\n                    arr[i] = NaN;\n                  }\n                  return [arr, offset];\n                };\n                break;\n              default:\n                accessor = function(view, offset) {\n                  return _this.getFromHeap(view, offset, descriptor);\n                };\n            }\n          } else {\n            if (count === 1) {\n              accessor = function(view, offset) {\n                var value, _ref3;\n                _ref3 = _this.dataAccessors[descriptor](view, offset), value = _ref3[0], offset = _ref3[1];\n                return [value, offset];\n              };\n            } else {\n              if (descriptor === 'X') {\n                nBytes = Math.log(count) / Math.log(2);\n                accessor = function(view, offset) {\n                  var arr, bits, buffer, byte, bytes, _j, _len;\n                  buffer = view.buffer.slice(offset, offset + nBytes);\n                  bytes = new Uint8Array(buffer);\n                  bits = [];\n                  for (_j = 0, _len = bytes.length; _j < _len; _j++) {\n                    byte = bytes[_j];\n                    arr = _this.toBits(byte);\n                    bits = bits.concat(arr);\n                  }\n                  offset += nBytes;\n                  return [bits.slice(0, +(count - 1) + 1 || 9e9), offset];\n                };\n              } else if (descriptor === 'A') {\n                accessor = function(view, offset) {\n                  var arr, buffer, s, value, _j, _len;\n                  buffer = view.buffer.slice(offset, offset + count);\n                  arr = new Uint8Array(buffer);\n                  s = '';\n                  for (_j = 0, _len = arr.length; _j < _len; _j++) {\n                    value = arr[_j];\n                    s += String.fromCharCode(value);\n                  }\n                  s = s.trim();\n                  offset += count;\n                  return [s, offset];\n                };\n              } else {\n                accessor = function(view, offset) {\n                  var data, value, _ref3;\n                  i = count;\n                  data = [];\n                  while (i--) {\n                    _ref3 = _this.dataAccessors[descriptor](view, offset), value = _ref3[0], offset = _ref3[1];\n                    data.push(value);\n                  }\n                  return [data, offset];\n                };\n              }\n            }\n          }\n          return _this.accessors.push(accessor);\n        })(descriptor, count));\n      }\n      return _results;\n    };\n\n    BinaryTable.prototype._getRows = function(buffer, nRows) {\n      var accessor, index, offset, row, rows, value, view, _i, _len, _ref2, _ref3;\n      view = new DataView(buffer);\n      offset = 0;\n      rows = [];\n      while (nRows--) {\n        row = {};\n        _ref2 = this.accessors;\n        for (index = _i = 0, _len = _ref2.length; _i < _len; index = ++_i) {\n          accessor = _ref2[index];\n          _ref3 = accessor(view, offset), value = _ref3[0], offset = _ref3[1];\n          row[this.columns[index]] = value;\n        }\n        rows.push(row);\n      }\n      return rows;\n    };\n\n    return BinaryTable;\n\n  })(Tabular);\n\n  this.astro.FITS.BinaryTable = BinaryTable;\n\n  Decompress = {\n    RiceSetup: {\n      1: function(array) {\n        var fsbits, fsmax, lastpix, pointer;\n        pointer = 1;\n        fsbits = 3;\n        fsmax = 6;\n        lastpix = array[0];\n        return [fsbits, fsmax, lastpix, pointer];\n      },\n      2: function(array) {\n        var bytevalue, fsbits, fsmax, lastpix, pointer;\n        pointer = 2;\n        fsbits = 4;\n        fsmax = 14;\n        lastpix = 0;\n        bytevalue = array[0];\n        lastpix = lastpix | (bytevalue << 8);\n        bytevalue = array[1];\n        lastpix = lastpix | bytevalue;\n        return [fsbits, fsmax, lastpix, pointer];\n      },\n      4: function(array) {\n        var bytevalue, fsbits, fsmax, lastpix, pointer;\n        pointer = 4;\n        fsbits = 5;\n        fsmax = 25;\n        lastpix = 0;\n        bytevalue = array[0];\n        lastpix = lastpix | (bytevalue << 24);\n        bytevalue = array[1];\n        lastpix = lastpix | (bytevalue << 16);\n        bytevalue = array[2];\n        lastpix = lastpix | (bytevalue << 8);\n        bytevalue = array[3];\n        lastpix = lastpix | bytevalue;\n        return [fsbits, fsmax, lastpix, pointer];\n      }\n    },\n    Rice: function(array, blocksize, bytepix, pixels, nx, setup) {\n      var b, bbits, diff, fs, fsbits, fsmax, i, imax, k, lastpix, nbits, nonzeroCount, nzero, pointer, _ref2, _ref3;\n      bbits = 1 << fsbits;\n      _ref2 = setup[bytepix](array), fsbits = _ref2[0], fsmax = _ref2[1], lastpix = _ref2[2], pointer = _ref2[3];\n      nonzeroCount = new Uint8Array(256);\n      nzero = 8;\n      _ref3 = [128, 255], k = _ref3[0], i = _ref3[1];\n      while (i >= 0) {\n        while (i >= k) {\n          nonzeroCount[i] = nzero;\n          i -= 1;\n        }\n        k = k / 2;\n        nzero -= 1;\n      }\n      nonzeroCount[0] = 0;\n      b = array[pointer++];\n      nbits = 8;\n      i = 0;\n      while (i < nx) {\n        nbits -= fsbits;\n        while (nbits < 0) {\n          b = (b << 8) | array[pointer++];\n          nbits += 8;\n        }\n        fs = (b >> nbits) - 1;\n        b &= (1 << nbits) - 1;\n        imax = i + blocksize;\n        if (imax > nx) {\n          imax = nx;\n        }\n        if (fs < 0) {\n          while (i < imax) {\n            pixels[i] = lastpix;\n            i += 1;\n          }\n        } else if (fs === fsmax) {\n          while (i < imax) {\n            k = bbits - nbits;\n            diff = b << k;\n            k -= 8;\n            while (k >= 0) {\n              b = array[pointer++];\n              diff |= b << k;\n              k -= 8;\n            }\n            if (nbits > 0) {\n              b = array[pointer++];\n              diff |= b >> (-k);\n              b &= (1 << nbits) - 1;\n            } else {\n              b = 0;\n            }\n            if ((diff & 1) === 0) {\n              diff = diff >> 1;\n            } else {\n              diff = ~(diff >> 1);\n            }\n            pixels[i] = diff + lastpix;\n            lastpix = pixels[i];\n            i++;\n          }\n        } else {\n          while (i < imax) {\n            while (b === 0) {\n              nbits += 8;\n              b = array[pointer++];\n            }\n            nzero = nbits - nonzeroCount[b];\n            nbits -= nzero + 1;\n            b ^= 1 << nbits;\n            nbits -= fs;\n            while (nbits < 0) {\n              b = (b << 8) | array[pointer++];\n              nbits += 8;\n            }\n            diff = (nzero << fs) | (b >> nbits);\n            b &= (1 << nbits) - 1;\n            if ((diff & 1) === 0) {\n              diff = diff >> 1;\n            } else {\n              diff = ~(diff >> 1);\n            }\n            pixels[i] = diff + lastpix;\n            lastpix = pixels[i];\n            i++;\n          }\n        }\n      }\n      return pixels;\n    }\n  };\n\n  this.astro.FITS.Decompress = Decompress;\n\n  CompressedImage = (function(_super) {\n    __extends(CompressedImage, _super);\n\n    CompressedImage.include(ImageUtils);\n\n    CompressedImage.extend(Decompress);\n\n    CompressedImage.randomGenerator = function() {\n      var a, i, m, random, seed, temp, _i;\n      a = 16807;\n      m = 2147483647;\n      seed = 1;\n      random = new Float32Array(10000);\n      for (i = _i = 0; _i <= 9999; i = ++_i) {\n        temp = a * seed;\n        seed = temp - m * parseInt(temp / m);\n        random[i] = seed / m;\n      }\n      return random;\n    };\n\n    CompressedImage.randomSequence = CompressedImage.randomGenerator();\n\n    function CompressedImage(header, data) {\n      var i, key, value, ztile, _i, _ref2;\n      CompressedImage.__super__.constructor.apply(this, arguments);\n      this.zcmptype = header.get(\"ZCMPTYPE\");\n      this.zbitpix = header.get(\"ZBITPIX\");\n      this.znaxis = header.get(\"ZNAXIS\");\n      this.zblank = header.get(\"ZBLANK\");\n      this.blank = header.get(\"BLANK\");\n      this.zdither = header.get('ZDITHER0') || 0;\n      this.ztile = [];\n      for (i = _i = 1, _ref2 = this.znaxis; 1 <= _ref2 ? _i <= _ref2 : _i >= _ref2; i = 1 <= _ref2 ? ++_i : --_i) {\n        ztile = header.contains(\"ZTILE\" + i) ? header.get(\"ZTILE\" + i) : i === 1 ? header.get(\"ZNAXIS1\") : 1;\n        this.ztile.push(ztile);\n      }\n      this.width = header.get(\"ZNAXIS1\");\n      this.height = header.get(\"ZNAXIS2\") || 1;\n      this.algorithmParameters = {};\n      if (this.zcmptype === 'RICE_1') {\n        this.algorithmParameters[\"BLOCKSIZE\"] = 32;\n        this.algorithmParameters[\"BYTEPIX\"] = 4;\n      }\n      i = 1;\n      while (true) {\n        key = \"ZNAME\" + i;\n        if (!header.contains(key)) {\n          break;\n        }\n        value = \"ZVAL\" + i;\n        this.algorithmParameters[header.get(key)] = header.get(value);\n        i += 1;\n      }\n      this.zmaskcmp = header.get(\"ZMASKCMP\");\n      this.zquantiz = header.get(\"ZQUANTIZ\") || \"LINEAR_SCALING\";\n      this.bzero = header.get(\"BZERO\") || 0;\n      this.bscale = header.get(\"BSCALE\") || 1;\n    }\n\n    CompressedImage.prototype._getRows = function(buffer, nRows) {\n      var accessor, arr, blank, data, i, index, nTile, offset, r, rIndex, row, scale, seed0, seed1, value, view, zero, _i, _j, _len, _len1, _ref2, _ref3;\n      view = new DataView(buffer);\n      offset = 0;\n      arr = new Float32Array(this.width * this.height);\n      while (nRows--) {\n        row = {};\n        _ref2 = this.accessors;\n        for (index = _i = 0, _len = _ref2.length; _i < _len; index = ++_i) {\n          accessor = _ref2[index];\n          _ref3 = accessor(view, offset), value = _ref3[0], offset = _ref3[1];\n          row[this.columns[index]] = value;\n        }\n        data = row['COMPRESSED_DATA'] || row['UNCOMPRESSED_DATA'] || row['GZIP_COMPRESSED_DATA'];\n        blank = row['ZBLANK'] || this.zblank;\n        scale = row['ZSCALE'] || this.bscale;\n        zero = row['ZZERO'] || this.bzero;\n        nTile = this.height - nRows;\n        seed0 = nTile + this.zdither - 1;\n        seed1 = (seed0 - 1) % 10000;\n        rIndex = parseInt(this.constructor.randomSequence[seed1] * 500);\n        for (index = _j = 0, _len1 = data.length; _j < _len1; index = ++_j) {\n          value = data[index];\n          i = (nTile - 1) * this.width + index;\n          if (value === -2147483647) {\n            arr[i] = NaN;\n          } else if (value === -2147483646) {\n            arr[i] = 0;\n          } else {\n            r = this.constructor.randomSequence[rIndex];\n            arr[i] = (value - r + 0.5) * scale + zero;\n          }\n          rIndex += 1;\n          if (rIndex === 10000) {\n            seed1 = (seed1 + 1) % 10000;\n            rIndex = parseInt(this.randomSequence[seed1] * 500);\n          }\n        }\n      }\n      return arr;\n    };\n\n    CompressedImage.prototype.getFrame = function(nFrame, callback, opts) {\n      var heapBlob, reader,\n        _this = this;\n      if (this.heap) {\n        this.frame = nFrame || this.frame;\n        return this.getRows(0, this.rows, callback, opts);\n      } else {\n        heapBlob = this.blob.slice(this.length, this.length + this.heapLength);\n        reader = new FileReader();\n        reader.onloadend = function(e) {\n          _this.heap = e.target.result;\n          return _this.getFrame(nFrame, callback, opts);\n        };\n        return reader.readAsArrayBuffer(heapBlob);\n      }\n    };\n\n    return CompressedImage;\n\n  })(BinaryTable);\n\n  this.astro.FITS.CompressedImage = CompressedImage;\n\n  HDU = (function() {\n    function HDU(header, data) {\n      this.header = header;\n      this.data = data;\n    }\n\n    HDU.prototype.hasData = function() {\n      if (this.data != null) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    return HDU;\n\n  })();\n\n  this.astro.FITS.HDU = HDU;\n\n }).call(window);\n"],"names":["console","log","Base","BinaryTable","CompressedImage","DataUnit","Decompress","FITS","HDU","Header","HeaderVerify","Image","ImageUtils","Parser","Table","Tabular","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","this","constructor","prototype","__super__","__slice","slice","astro","include","obj","value","extend","proxy","func","_this","apply","arguments","invoke","callback","opts","data","context","_super","arg","xhr","hdus","blockCount","begin","end","BLOCKLENGTH","offset","headerStorage","Uint8Array","readNextBlock","_readBlockFromBuffer","XMLHttpRequest","open","responseType","onload","status","response","length","byteLength","readFromBuffer","send","size","_readBlockFromFile","readFromFile","LINEWIDTH","File","webkitSlice","Blob","block","readBlock","reader","FileReader","onloadend","e","target","result","readAsArrayBuffer","arr","dataLength","dataunit","header","rowIndex","rows","s","tmp","_i","_len","_ref","set","String","fromCharCode","start","getDataLength","hasDataUnit","createDataUnit","push","excessBytes","blob","type","getDataType","isEOF","parser","fits","getHDU","index","hdu","hasData","getHeader","getDataUnit","version","ArrayBuffer","buffer","swapEndian","B","I","J","verifyOrder","keyword","order","cardIndex","warn","verifyBetween","lower","upper","verifyBoolean","VerifyFns","SIMPLE","primary","XTENSION","extension","extensionType","BITPIX","parseInt","NAXIS","required","isExtension","PCOUNT","get","GCOUNT","EXTEND","isPrimary","BSCALE","parseFloat","BZERO","BLANK","DATAMIN","DATAMAX","EXTVER","EXTLEVEL","TFIELDS","TBCOL","ZIMAGE","ZCMPTYPE","ZBITPIX","ZNAXIS","ZTILE","ZSIMPLE","ZPCOUNT","ZGCOUNT","ZDITHER0","method","name","verifyCard","cards","arrayPattern","maxLines","contains","comment","readLine","l","indicator","trim","split","validate","baseKey","isArray","test","exec","i","line","nLines","_results","naxis","reduce","a","b","Math","abs","getExtent","max","min","isNaN","NaN","getPixel","x","y","width","frame","_j","bitpix","height","depth","bzero","bscale","bytes","frameOffsets","frameLength","nBuffers","buffers","allocationSize","_getFrame","nPixels","Uint16Array","Int16Array","Int32Array","Float32Array","Uint32Array","_getFrameAsync","URL","blobGetFrame","blobOnMessage","fn1","fn2","mime","msg","pixels","urlGetFrame","urlOnMessage","worker","url","importScripts","postMessage","toString","replace","window","webkitURL","createObjectURL","Worker","onmessage","revokeObjectURL","terminate","getFrame","blobFrame","blobs","bytesPerBuffer","frameInfo","floor","getFrames","number","cb","isDataCube","rowByteSize","cols","heapLength","columns","getColumns","rowsInMemory","_rowsInMemoryBuffer","heap","_rowsInMemoryBlob","firstRowInBuffer","lastRowInBuffer","nRowsInBuffer","maxMemory","accessors","descriptors","elementByteLengths","setAccessors","firstRow","lastRow","getColumn","accessor","column","descriptor","elementByteOffset","factor","iterations","rowsPerIteration","indexOf","typedArray","nRows","startRow","view","DataView","getTableBuffer","map","d","getRows","row","blobRows","_getRows","dataAccessors","A","F","E","D","form","pattern","_ref1","subarray","_k","_len1","_ref2","Float64Array","1","2","4","offsets","L","K","C","M","getInt8","getUint8","getInt16","getInt32","highByte","mod","val","getFloat32","getFloat64","val1","toBits","byte","getFromHeap","heapOffset","heapSlice","count","match","nBytes","_ref3","algorithmParameters","ztile","Rice","RiceSetup","bits","concat","array","lastpix","blocksize","bytepix","nx","setup","bbits","diff","fs","fsbits","fsmax","imax","k","nbits","nonzeroCount","nzero","pointer","zcmptype","zbitpix","znaxis","zblank","blank","zdither","zmaskcmp","zquantiz","randomGenerator","m","random","seed","temp","randomSequence","nTile","r","rIndex","scale","seed1","zero","nFrame","heapBlob"],"version":3,"file":"fits.09b4f461.js.map"}